name: CI

on:
  push:
    branches: [ '*' ]
    tags:
      - v*

jobs:
  linux_aarch64:
    name: Linux AARCH64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: aarch64-unknown-linux-gnu
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target aarch64-unknown-linux-gnu
      - name: Display structure of files
        run: ls -R

      - uses: actions/upload-artifact@v2
        with:
          name: target
          path: target/**/release/races
          
  buildx:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: target
          
      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=stoub/nav-races
          DOCKER_PLATFORMS=linux/arm64
          VERSION=${GITHUB_REF##*/}-${GITHUB_SHA::8}

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi

          TAGS="${VERSION}"
          if [[ $VERSION =~ ^[0-9]\.[0-9]$ ]]; then
            TAGS="${TAGS}, latest"
          else
            TAGS="${TAGS}, ${GITHUB_REF##*/}"
          fi

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=tags::${TAGS}

      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Build & push Docker image
        with:
          image: ${{ steps.prepare.outputs.docker_image }}
          tags: ${{ steps.prepare.outputs.tags }}
          registry: docker.io
          dockerfile: Dockerfile.arm64
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

